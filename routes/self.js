function getStress(e){for(var r=Db.getRefs().muscles,t=function(){for(var e=0,t=0;t<r.length;t++)e+=r[t].power;return e},a=t(),i=0,s=0;s<e["private"].body.length;s++){var l=e["private"].body[s],o=r[l._id];i+=o.power*l.stress/a}return i}function update(e){var r=module.exports.getRegen(e),t=new Date,a=DateHelper.intervalHours(Date.parse(t)-Date.parse(new Date(e["private"].reg.lastUpdateTime))),i=$.round(r.frazzle*a),s=Math.round(e["private"].energy+r.energy*a);s>PlayersCollection.ENERGY_MAX&&(s=PlayersCollection.ENERGY_MAX),e["private"].garb+=Math.round(REG_GARB*a),e["private"].garb>GARB_MAX&&(e["private"].garb=GARB_MAX),e["private"].energy=s,e["private"].reg.lastUpdateTime=t.getTime();for(var l=0;l<e["private"].body.length;l++){var o=e["private"].body[l];o.frazzle=$.round(o.frazzle-i),o.frazzle<0&&(o.frazzle=0)}}function getLevelChange(e){var r=new Date;if(e["public"].level>0){var t=DateHelper.addHoursClone(new Date(e["private"].reg.lastCheckLevelUpTime),CHECK_LEVELUP_PERIOD);if(t>r)return-2}e["private"].reg.lastCheckLevelUpTime=r.getTime();var a=module.exports.getPlayerStat(e),i=curve.getLevelRequirements(e["public"].level),s=0;return a.growt>=i?(e["public"].level++,e["private"].growt=0,s=1):(e["private"].growt||(e["private"].growt=0),e["private"].growt+=a.growt),e["private"].body.forEach(function(e){e.frazzle=0,e.stress=0}),e["private"].rest=[],e["private"].food=[],e["private"].stimul=[],0===s&&0===e["public"].level?-2:s}var Db=require("../db"),DateHelper=require("../controllers/date"),PlayersCollection=require("../gymdb/collections/players"),Player=require("../controllers/player"),$=require("jquery-deferred"),curve=require("../controllers/curve"),UPDATE_PERIOD=2,CHECK_LEVELUP_PERIOD=2,REG_FRAZZLE_PER_HOUR=1,REG_ENERGY=1,REG_GARB=30;REG_ENERGY_PER_HOUR=REG_ENERGY*PlayersCollection.ENERGY_MAX;var MAX_LEVEL=67,GARB_MAX=14,BONUS_MAX=10;module.exports={getPlayerStat:function(e){function r(e,r,t){var a=r*t,i=3*e;return i/a}for(var t=e["public"].level,a=getStress(e),i=curve.getMass(t),s=0,l=0,o=0,n=0;n<e["private"].food.length;n++){var p=e["private"].food[n],v=Db.getRefs().shop[0].items[p];s+=v.carbs,l+=v.fats,o+=v.proteins}var u=curve.getFoodProfit("carbs",r(s,i,6)),p=curve.getFoodProfit("fats",r(l,i,1)),g=curve.getFoodProfit("proteins",r(o,i,2.5)),f=.5+(u+p+g)/3;f>1&&(f=1);for(var c=.5,n=0;n<e["private"].rest.length;n++){var d=e["private"].rest[n],E=Db.getRefs().shop[1].items[d];c+=E.coeff}c>1&&(c=1);for(var R=1,n=0;n<e["private"].stimul.length;n++){var h=e["private"].stimul[n],y=Db.getRefs().shop[2].items[h];R+=y.growth}R>2&&(R=2);var b=a*c*f*R;return{period:"each "+CHECK_LEVELUP_PERIOD+" hours",growt:b,stress:a,rest:c,food:f,stimul:R,foodDetails:{carbs:u,fats:p,proteins:g}}},getRegen:function(e){for(var r=0,t=0;t<e["private"].rest.length;t++){var a=e["private"].rest[t],i=Db.getRefs().shop[1].items[a];r+=i.coeff}r>1&&(r=1),r=.5*r;for(var s=0,t=0;t<e["private"].stimul.length;t++){var l=e["private"].stimul[t],o=Db.getRefs().shop[2].items[l];s+=o.regen}return s>.5&&(s=.5),{energy:(REG_ENERGY+r+s)*PlayersCollection.ENERGY_MAX,frazzle:REG_FRAZZLE_PER_HOUR+r+s}},get:{params:{bill:{parseMethod:parseFloat},friends:{parseMethod:parseInt},garb:{parseMethod:parseInt},bonus:{parseMethod:parseInt}},handler:function(e,r){var t=$.Deferred(),a=e.player;r.bonus&&(a["private"].money+=Math.min(r.bonus,BONUS_MAX),e.isDirty=!0),r.garb&&(a["private"].garb-=r.garb,a["private"].garb<0&&(a["private"].garb=0),e.isDirty=!0),r.bill&&a["private"].coach.hired&&(a["private"].coach.bill=r.bill,e.isDirty=!0),r.friends&&(a["private"].friends=r.friends,e.isDirty=!0);var i=new Date,s=a["private"].reg,l=DateHelper.addMinutesClone(new Date(s.lastUpdateTime),UPDATE_PERIOD);if(l>i)return t.resolve({success:!0,player:a}),t;update(a);var o=getLevelChange(a);e.isDirty=!0;var n={success:!0,player:a};return-2!=o&&(n.levelChange=o),t.resolve(n),t}},getPlayer:{params:{playerId:{required:!0,parseMethod:parseInt}},handler:function(e,r){var t=$.Deferred();return Player.find(r.playerId,["_id","public"]).then(function(e){t.resolve({success:!0,player:e})}),t}},getPlayers:{params:{playerIds:{required:!0,parseMethod:function(e){var r=[];return e.split(",").forEach(function(e){r.push(parseInt(e))}),r}}},handler:function(e,r){var t=$.Deferred();return Player.getPlayers(r.playerIds).then(function(e){t.resolve({success:!0,players:e})}),t}}};