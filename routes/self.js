function getStress(e){for(var r=Db.getRefs().muscles,t=function(){for(var e=0,t=0;t<r.length;t++)e+=r[t].power;return e},a=t(),o=0,i=0;i<e["private"].body.length;i++){var s=e["private"].body[i],n=r[s._id];o+=n.power*s.stress/a}return o}function update(e){var r=module.exports.getRegen(e),t=new Date,a=DateHelper.intervalHours(Date.parse(t)-Date.parse(new Date(e["private"].reg.lastUpdateTime))),o=$.round(r.frazzle*a),i=$.round(r.tonus*a),s=Math.round(e["private"].energy+r.energy*a);s>PlayersCollection.ENERGY_MAX&&(s=PlayersCollection.ENERGY_MAX),e["private"].garb+=Math.round(REG_GARB*a),e["private"].garb>GARB_MAX&&(e["private"].garb=GARB_MAX),e["private"].energy=s,e["private"].reg.lastUpdateTime=t.getTime();for(var n=0;n<e["private"].body.length;n++){var l=e["private"].body[n];l.frazzle=$.round(l.frazzle-o),l.frazzle<0&&(l.frazzle=0),e["private"].tonus&&(e["private"].tonus[n]=$.round(e["private"].tonus[n]-i),e["private"].tonus[n]<0&&(e["private"].tonus[n]=0))}}function getLevelChange(e){var r=new Date,t=module.exports.getPlayerStat(e),a=curve.getLevelRequirements(e["public"].level),o=(e["private"].growt||e["private"].growth||0)+t.growth;if(e["public"].level>0&&a>o){var i=DateHelper.addHoursClone(new Date(e["private"].reg.lastCheckLevelUpTime),server.CHECK_LEVELUP_PERIOD);if(i>r)return-2}e["private"].reg.lastCheckLevelUpTime=r.getTime();var s=0;if(o>=a)e["public"].level++,e["private"].growth=0,e["private"].energy=PlayersCollection.ENERGY_MAX,s=1;else{if(0===e["public"].level)return-2;e["private"].growth=o}return e["private"].body.forEach(function(e){e.frazzle=0,e.stress=0}),e["private"].rest=[],e["private"].food=[],e["private"].stimul=[],0===s&&0===e["public"].level?-2:s}var Db=require("../db"),DateHelper=require("../controllers/date"),PlayersCollection=require("../gymdb/collections/players"),Player=require("../controllers/player"),$=require("jquery-deferred"),curve=require("../controllers/curve"),server=require("../server"),Rank=require("../controllers/rank"),Stimul=require("../controllers/stimul"),UPDATE_PERIOD=2,REG_FRAZZLE_PER_HOUR=.4,REG_ENERGY=.4,REG_TONUS_PER_HOUR=.001,REG_GARB=30,MAX_LEVEL=67,GARB_MAX=14,BONUS_MAX=10;module.exports={getPlayerStat:function(e){function r(e,r,t){var a=r*t,o=3*e;return o/a}for(var t=e["public"].level,a=getStress(e),o=curve.getMass(t),i=0,s=0,n=0,l=0;l<e["private"].food.length;l++){var p=e["private"].food[l],v=Db.getRefs().shop[0].items[p];i+=v.carbs,s+=v.fats,n+=v.proteins}var u=curve.getFoodProfit("carbs",r(i,o,6)),p=curve.getFoodProfit("fats",r(s,o,1)),g=curve.getFoodProfit("proteins",r(n,o,2.5)),d=0+(u+p+g)/3;d>1&&(d=1);for(var f=0,l=0;l<e["private"].rest.length;l++){var c=e["private"].rest[l],y=Db.getRefs().shop[1].items[c];f+=y.coeff}f>1&&(f=1);var R=1+Stimul.getGrowth(e),E=a*f*d*R;return{period:"each "+server.CHECK_LEVELUP_PERIOD+" hours",growth:E,stress:a,rest:f,food:d,stimulGrowth:R}},getRegen:function(e){for(var r=0,t=0;t<e["private"].rest.length;t++){var a=e["private"].rest[t],o=Db.getRefs().shop[1].items[a];r+=o.coeff}r>1&&(r=1);var i=Stimul.getRegen(e);return{energy:REG_ENERGY*(r+i)*PlayersCollection.ENERGY_MAX,frazzle:REG_FRAZZLE_PER_HOUR*(r+i),tonus:REG_TONUS_PER_HOUR}},get:{params:{friends:{parseMethod:parseInt},garb:{parseMethod:parseInt},bonus:{parseMethod:parseInt}},handler:function(e,r){var t=$.Deferred(),a=e.player;r.bonus&&(a["private"].money+=Math.min(r.bonus,BONUS_MAX),e.isDirty=!0),r.garb&&(a["private"].garb-=r.garb,a["private"].garb<0&&(a["private"].garb=0),e.isDirty=!0),r.friends&&(a["private"].friends=r.friends,e.isDirty=!0);var o=new Date,i=a["private"].reg,s=DateHelper.addMinutesClone(new Date(i.lastUpdateTime),UPDATE_PERIOD);if(s>o)return t.resolve({success:!0,player:a}),t;var n={success:!0,player:a};if(s.getDay()!=o.getDay()){var l=Rank.getSalary(a);l&&(n.money=l.money,a["private"].money+=l.money,l.gold>0&&(n.gold=l.gold,a["private"].gold+=l.gold))}update(a);var p=getLevelChange(a);return e.isDirty=!0,-2!=p&&(n.levelChange=p),t.resolve(n),t}},getPlayer:{params:{playerId:{required:!0,parseMethod:parseInt}},handler:function(e,r){var t=$.Deferred();return Player.find(r.playerId,["_id","public"]).then(function(e){t.resolve({success:!0,player:e})}),t}},getPlayers:{params:{playerIds:{required:!0,parseMethod:function(e){var r=[];return e.split(",").forEach(function(e){r.push(parseInt(e))}),r}}},handler:function(e,r){var t=$.Deferred();return Player.getPlayers(r.playerIds).then(function(e){t.resolve({success:!0,players:e})}),t}}};