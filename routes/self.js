function getStress(e){for(var r=Db.getRefs().muscles,t=function(){for(var e=0,t=0;t<r.length;t++)e+=r[t].power;return e},a=t(),l=0,n=0;n<e["private"].body.length;n++){var s=e["private"].body[n],i=r[s._id];l+=i.power*s.stress/a}return l}function update(e){var r=module.exports.getRegen(e);0==r.frazzle&&(r.frazzle=.3),0==r.energy&&(r.energy=.3);var t=new Date,a=DateHelper.intervalHours(Date.parse(t)-Date.parse(new Date(e["private"].reg.lastUpdateTime))),l=$.round(r.frazzle*a),n=$.round(r.tonus*a),s=$.round(e["private"].energy+r.energy*a);s>PlayersCollection.ENERGY_MAX&&(s=PlayersCollection.ENERGY_MAX),e["private"].garb+=Math.round(r.garb*a),e["private"].garb>GARB_MAX&&(e["private"].garb=GARB_MAX),e["private"].energy=s,e["private"].reg.lastUpdateTime=t.getTime();for(var i=0;i<e["private"].body.length;i++){var o=e["private"].body[i];o.frazzle=$.round(o.frazzle-l),o.frazzle<0&&(o.frazzle=0),e["private"].tonus&&(e["private"].tonus[i]=$.round(e["private"].tonus[i]-n),e["private"].tonus[i]<0&&(e["private"].tonus[i]=0))}}function getLevelChange(e,r){var t=new Date,a=Curve.getLevelRequirements(e["public"].level),l=(e["private"].growth||e["private"].growt||0)+r.growth;if(e["public"].level>0&&a>l){var n=DateHelper.addHoursClone(new Date(e["private"].reg.lastCheckLevelUpTime),GLOBAL.GYM.CHECK_LEVELUP_PERIOD);if(n>t)return-2}e["private"].reg.lastCheckLevelUpTime=t.getTime();var s=0;if(l>=a)e["public"].level++,e["private"].growth=0,e["private"].energy=PlayersCollection.ENERGY_MAX,s=1;else{if(0===e["public"].level)return-2;e["private"].growth=l}return e["private"].body.forEach(function(e){e.frazzle=0,e.stress=0}),e["private"].rest=[],e["private"].food=[],e["private"].stimul=[],0===s&&0===e["public"].level?-2:s}var Db=require("../db"),DateHelper=require("../controllers/date"),PlayersCollection=require("../gymdb/collections/players"),Player=require("../controllers/player"),$=require("jquery-deferred"),Curve=require("../controllers/curve"),Rank=require("../controllers/rank"),Stimul=require("../controllers/stimul"),Mass=require("../controllers/mass"),MAX_LEVEL=67,GARB_MAX=14,BONUS_MAX=10;module.exports={getPlayerStat:function(e){for(var r=e["public"].level,t=getStress(e),a=(Curve.getMass(r),Stimul.getFood(e)),l=0,n=0;n<e["private"].rest.length;n++){var s=e["private"].rest[n],i=Db.getRefs().shop[1].items[s];i&&(l+=i.coeff)}l>1&&(l=1);var o=1+Stimul.getGrowth(e),p=t*l*a*o;return{period:"each "+GLOBAL.GYM.CHECK_LEVELUP_PERIOD+" hours",growth:p,stress:t,rest:l,food:a,stimulGrowth:o}},getRegen:function(e){for(var r=0,t=0;t<e["private"].rest.length;t++){var a=e["private"].rest[t],l=Db.getRefs().shop[1].items[a];l&&(r+=l.coeff)}r>1&&(r=1);var n=Stimul.getRegen(e),s={energy:GLOBAL.GYM.REG_ENERGY*(r+n)*PlayersCollection.ENERGY_MAX,frazzle:GLOBAL.GYM.REG_FRAZZLE*(r+n),tonus:GLOBAL.GYM.REG_TONUS,garb:GLOBAL.GYM.REG_GARB};return s.energy<GLOBAL.GYM.REG_ENERGY_SLOW*PlayersCollection.ENERGY_MAX&&(s.energy=GLOBAL.GYM.REG_ENERGY_SLOW*PlayersCollection.ENERGY_MAX),s.frazzle<GLOBAL.GYM.REG_FRAZZLE_SLOW&&(s.frazzle=GLOBAL.GYM.REG_FRAZZLE_SLOW),s},get:{params:{friends:{parseMethod:parseInt},garb:{parseMethod:parseInt},bonus:{parseMethod:parseInt}},handler:function(e,r){var t=$.Deferred(),a=e.player;r.bonus&&(a["private"].money+=Math.min(r.bonus,BONUS_MAX),e.isDirty=!0),r.garb&&(a["private"].garb-=r.garb,a["private"].garb<0&&(a["private"].garb=0),e.isDirty=!0),r.friends&&(a["private"].friends=r.friends,e.isDirty=!0);var l=new Date,n=a["private"].reg,s=DateHelper.addMinutesClone(new Date(n.lastUpdateTime),GLOBAL.GYM.UPDATE_PERIOD);if(s>l)return t.resolve({success:!0,player:a}),t;var i=module.exports.getPlayerStat(a),o=Mass.getMass(a,i.growth),p={success:!0,player:a,mass:o};if(s.getDay()!=l.getDay()){var u=Rank.getSalary(a);u&&(p.money=u.money,a["private"].money+=u.money,u.gold>0&&(p.gold=u.gold,a["private"].gold+=u.gold))}update(a);var v=getLevelChange(a,i);if(1===v){var g=Rank.update(a);null!==g&&(p.rank=g)}return e.isDirty=!0,-2!=v&&(p.levelChange=v),t.resolve(p),t}},getPlayer:{params:{playerId:{required:!0,parseMethod:parseInt}},handler:function(e,r){var t=$.Deferred();return Player.find(r.playerId,{_id:1,"public":1}).then(function(e){t.resolve({success:!0,player:e})}),t}},getPlayers:{params:{playerIds:{required:!0,parseMethod:function(e){var r=[];return e.split(",").forEach(function(e){r.push(parseInt(e))}),r}}},handler:function(e,r){var t=$.Deferred();return Player.getPlayers(r.playerIds).then(function(e){t.resolve({success:!0,players:e})}),t}}};